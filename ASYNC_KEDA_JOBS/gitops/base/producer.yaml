kind: Deployment
apiVersion: apps/v1
metadata:
  name: sailfish-example-producer
  labels:
    app: sailfish-example-producer
    app.kubernetes.io/component: sailfish-example-producer
    app.kubernetes.io/instance: sailfish-example-producer
    app.kubernetes.io/name: sailfish-example-producer
    app.kubernetes.io/part-of: sample-sailfish-app
    app.openshift.io/runtime: dotnet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sailfish-example-producer
  template:
    metadata:
      labels:
        app: sailfish-example-producer
        app.kubernetes.io/component: sailfish-example-producer
        app.kubernetes.io/name: sailfish-example-producer
        deploymentconfig: sailfish-example-producer
    spec:
      nodeSelector:   
        ortec-finance/application: glass 
      tolerations: #  
        - effect: NoSchedule
          key: ortec-finance
          value: glass-application
      containers:
        - name: sailfish-example-producer
          image: >-
             producer-image
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 9000
              protocol: TCP
          env:
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: sailfish-broker-credentials-secret
                  key: AMQ_USER
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sailfish-broker-credentials-secret
                  key: AMQ_PASSWORD
            - name: HOST
              value: BROKERNAME-hdls-svc.NAMESPACE.svc.cluster.local # overwritten in overlay
            - name: PORT
              value: '5672'
            - name: ADDRESS
              value: sailfishWork
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      timeoutSeconds: 300
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600